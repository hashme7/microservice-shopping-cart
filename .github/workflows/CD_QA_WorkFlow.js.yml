# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Deploy on QA

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
jobs:
  deploy_on_qa:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout Source Code
      uses: actions/checkout@v3

    - name: Create Products Env file
      working-directory: ./products
      run: |
        touch .env
        echo APP_SECRET=micro-secret >> .env
        echo MONGO_URL=mongodb://nosql-db/msytt_product >> .env
        echo MSG_QUEUE_URL=amqp://rabbitmq:5672 >> .env
        echo EXCHANGE_NAME=ONLINE_STORE >> .env
        echo PORT=8002 >> .env
        cat .env
        
    - name: Create Customer Env file
      working-directory: ./customer
      run: |
        touch .env
        echo APP_SECRET=micro-secret >> .env
        echo MONGO_URL=mongodb://nosql-db/msytt_customer >> .env
        echo MSG_QUEUE_URL=amqp://rabbitmq:5672 >> .env
        echo EXCHANGE_NAME=ONLINE_STORE >> .env
        echo PORT=8001 >> .env
        cat .env  
        
    - name: Create Shopping Env file
      working-directory: ./shopping
      run: |
        touch .env
        echo APP_SECRET=micro-secret >> .env
        echo MONGO_URL=mongodb://nosql-db/msytt_shopping >> .env
        echo MSG_QUEUE_URL=amqp://rabbitmq:5672 >> .env
        echo EXCHANGE_NAME=ONLINE_STORE >> .env
        echo PORT=8003 >> .env
        cat .env

    # - name: Generate deployment package
    #   run: |
    #     zip -r deploy.zip . -x '*.git*'
    # - name: Deploy on Elastic beanstalk QA env
    #   uses: einaregilsson/beanstalk-deploy@v20
    #   with:
    #     aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     application_name: microservice-w-cicd
    #     environment_name: Microservice-w-cicd-env
    #     version_label: "ver-${{ github.sha }}"
    #     region: eu-central-1
    #     deployment_package: deploy.zip
        
      
